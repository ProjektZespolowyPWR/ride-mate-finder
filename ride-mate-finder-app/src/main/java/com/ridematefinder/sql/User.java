package com.ridematefinder.sql;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;
import java.util.HashSet;
import java.util.Set;
import java.util.UUID;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,schema="public"
    , uniqueConstraints = @UniqueConstraint(columnNames="driver_id") 
)
public class User  implements java.io.Serializable {


     private UUID id;
     private Pictures pictures;
     private UUID driverId;
     private String name;
     private String surname;
     private String email;
     private Boolean gender;
     private int age;
     private Set passengerses = new HashSet(0);
     private Paymentdata paymentdata;
     private Set opinionusersForUserIdReceiver = new HashSet(0);
     private Set opinionusersForUserIdSetter = new HashSet(0);
     private Set cars = new HashSet(0);
     private Set opinioncars = new HashSet(0);
     private Set routes = new HashSet(0);
     private Set userbadgeses = new HashSet(0);

    public User() {
    }

	
    public User(UUID id, String name, String email, int age) {
        this.id = id;
        this.name = name;
        this.email = email;
        this.age = age;
    }
    public User(UUID id, Pictures pictures, UUID driverId, String name, String surname, String email, Boolean gender, int age, Set passengerses, Paymentdata paymentdata, Set opinionusersForUserIdReceiver, Set opinionusersForUserIdSetter, Set cars, Set opinioncars, Set routes, Set userbadgeses) {
       this.id = id;
       this.pictures = pictures;
       this.driverId = driverId;
       this.name = name;
       this.surname = surname;
       this.email = email;
       this.gender = gender;
       this.age = age;
       this.passengerses = passengerses;
       this.paymentdata = paymentdata;
       this.opinionusersForUserIdReceiver = opinionusersForUserIdReceiver;
       this.opinionusersForUserIdSetter = opinionusersForUserIdSetter;
       this.cars = cars;
       this.opinioncars = opinioncars;
       this.routes = routes;
       this.userbadgeses = userbadgeses;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public UUID getId() {
        return this.id;
    }
    
    public void setId(UUID id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="pic_id")
    public Pictures getPictures() {
        return this.pictures;
    }
    
    public void setPictures(Pictures pictures) {
        this.pictures = pictures;
    }

    
    @Column(name="driver_id", unique=true)
    public UUID getDriverId() {
        return this.driverId;
    }
    
    public void setDriverId(UUID driverId) {
        this.driverId = driverId;
    }

    
    @Column(name="name", nullable=false, length=255)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="surname", length=255)
    public String getSurname() {
        return this.surname;
    }
    
    public void setSurname(String surname) {
        this.surname = surname;
    }

    
    @Column(name="email", nullable=false, length=255)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="gender")
    public Boolean getGender() {
        return this.gender;
    }
    
    public void setGender(Boolean gender) {
        this.gender = gender;
    }

    
    @Column(name="age", nullable=false)
    public int getAge() {
        return this.age;
    }
    
    public void setAge(int age) {
        this.age = age;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set getPassengerses() {
        return this.passengerses;
    }
    
    public void setPassengerses(Set passengerses) {
        this.passengerses = passengerses;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="user")
    public Paymentdata getPaymentdata() {
        return this.paymentdata;
    }
    
    public void setPaymentdata(Paymentdata paymentdata) {
        this.paymentdata = paymentdata;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUserIdReceiver")
    public Set getOpinionusersForUserIdReceiver() {
        return this.opinionusersForUserIdReceiver;
    }
    
    public void setOpinionusersForUserIdReceiver(Set opinionusersForUserIdReceiver) {
        this.opinionusersForUserIdReceiver = opinionusersForUserIdReceiver;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userByUserIdSetter")
    public Set getOpinionusersForUserIdSetter() {
        return this.opinionusersForUserIdSetter;
    }
    
    public void setOpinionusersForUserIdSetter(Set opinionusersForUserIdSetter) {
        this.opinionusersForUserIdSetter = opinionusersForUserIdSetter;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set getCars() {
        return this.cars;
    }
    
    public void setCars(Set cars) {
        this.cars = cars;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set getOpinioncars() {
        return this.opinioncars;
    }
    
    public void setOpinioncars(Set opinioncars) {
        this.opinioncars = opinioncars;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set getRoutes() {
        return this.routes;
    }
    
    public void setRoutes(Set routes) {
        this.routes = routes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set getUserbadgeses() {
        return this.userbadgeses;
    }
    
    public void setUserbadgeses(Set userbadgeses) {
        this.userbadgeses = userbadgeses;
    }




}


